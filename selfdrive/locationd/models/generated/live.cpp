#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_67663736958012525) {
   out_67663736958012525[0] = 0;
   out_67663736958012525[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_67663736958012525[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_67663736958012525[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_67663736958012525[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_67663736958012525[5] = -sin(in_vec[1]);
   out_67663736958012525[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_67663736958012525[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_67663736958012525[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_67663736958012525[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_67663736958012525[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_67663736958012525[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_67663736958012525[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_67663736958012525[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_67663736958012525[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_67663736958012525[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_67663736958012525[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_67663736958012525[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_6833709615789680185) {
   out_6833709615789680185[0] = delta_x[0] + nom_x[0];
   out_6833709615789680185[1] = delta_x[1] + nom_x[1];
   out_6833709615789680185[2] = delta_x[2] + nom_x[2];
   out_6833709615789680185[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_6833709615789680185[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_6833709615789680185[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_6833709615789680185[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_6833709615789680185[7] = delta_x[6] + nom_x[7];
   out_6833709615789680185[8] = delta_x[7] + nom_x[8];
   out_6833709615789680185[9] = delta_x[8] + nom_x[9];
   out_6833709615789680185[10] = delta_x[9] + nom_x[10];
   out_6833709615789680185[11] = delta_x[10] + nom_x[11];
   out_6833709615789680185[12] = delta_x[11] + nom_x[12];
   out_6833709615789680185[13] = delta_x[12] + nom_x[13];
   out_6833709615789680185[14] = delta_x[13] + nom_x[14];
   out_6833709615789680185[15] = delta_x[14] + nom_x[15];
   out_6833709615789680185[16] = delta_x[15] + nom_x[16];
   out_6833709615789680185[17] = delta_x[16] + nom_x[17];
   out_6833709615789680185[18] = delta_x[17] + nom_x[18];
   out_6833709615789680185[19] = delta_x[18] + nom_x[19];
   out_6833709615789680185[20] = delta_x[19] + nom_x[20];
   out_6833709615789680185[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_3941682818716822640) {
   out_3941682818716822640[0] = -nom_x[0] + true_x[0];
   out_3941682818716822640[1] = -nom_x[1] + true_x[1];
   out_3941682818716822640[2] = -nom_x[2] + true_x[2];
   out_3941682818716822640[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_3941682818716822640[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_3941682818716822640[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_3941682818716822640[6] = -nom_x[7] + true_x[7];
   out_3941682818716822640[7] = -nom_x[8] + true_x[8];
   out_3941682818716822640[8] = -nom_x[9] + true_x[9];
   out_3941682818716822640[9] = -nom_x[10] + true_x[10];
   out_3941682818716822640[10] = -nom_x[11] + true_x[11];
   out_3941682818716822640[11] = -nom_x[12] + true_x[12];
   out_3941682818716822640[12] = -nom_x[13] + true_x[13];
   out_3941682818716822640[13] = -nom_x[14] + true_x[14];
   out_3941682818716822640[14] = -nom_x[15] + true_x[15];
   out_3941682818716822640[15] = -nom_x[16] + true_x[16];
   out_3941682818716822640[16] = -nom_x[17] + true_x[17];
   out_3941682818716822640[17] = -nom_x[18] + true_x[18];
   out_3941682818716822640[18] = -nom_x[19] + true_x[19];
   out_3941682818716822640[19] = -nom_x[20] + true_x[20];
   out_3941682818716822640[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6899387553266169298) {
   out_6899387553266169298[0] = 1.0;
   out_6899387553266169298[1] = 0;
   out_6899387553266169298[2] = 0;
   out_6899387553266169298[3] = 0;
   out_6899387553266169298[4] = 0;
   out_6899387553266169298[5] = 0;
   out_6899387553266169298[6] = 0;
   out_6899387553266169298[7] = 0;
   out_6899387553266169298[8] = 0;
   out_6899387553266169298[9] = 0;
   out_6899387553266169298[10] = 0;
   out_6899387553266169298[11] = 0;
   out_6899387553266169298[12] = 0;
   out_6899387553266169298[13] = 0;
   out_6899387553266169298[14] = 0;
   out_6899387553266169298[15] = 0;
   out_6899387553266169298[16] = 0;
   out_6899387553266169298[17] = 0;
   out_6899387553266169298[18] = 0;
   out_6899387553266169298[19] = 0;
   out_6899387553266169298[20] = 0;
   out_6899387553266169298[21] = 0;
   out_6899387553266169298[22] = 1.0;
   out_6899387553266169298[23] = 0;
   out_6899387553266169298[24] = 0;
   out_6899387553266169298[25] = 0;
   out_6899387553266169298[26] = 0;
   out_6899387553266169298[27] = 0;
   out_6899387553266169298[28] = 0;
   out_6899387553266169298[29] = 0;
   out_6899387553266169298[30] = 0;
   out_6899387553266169298[31] = 0;
   out_6899387553266169298[32] = 0;
   out_6899387553266169298[33] = 0;
   out_6899387553266169298[34] = 0;
   out_6899387553266169298[35] = 0;
   out_6899387553266169298[36] = 0;
   out_6899387553266169298[37] = 0;
   out_6899387553266169298[38] = 0;
   out_6899387553266169298[39] = 0;
   out_6899387553266169298[40] = 0;
   out_6899387553266169298[41] = 0;
   out_6899387553266169298[42] = 0;
   out_6899387553266169298[43] = 0;
   out_6899387553266169298[44] = 1.0;
   out_6899387553266169298[45] = 0;
   out_6899387553266169298[46] = 0;
   out_6899387553266169298[47] = 0;
   out_6899387553266169298[48] = 0;
   out_6899387553266169298[49] = 0;
   out_6899387553266169298[50] = 0;
   out_6899387553266169298[51] = 0;
   out_6899387553266169298[52] = 0;
   out_6899387553266169298[53] = 0;
   out_6899387553266169298[54] = 0;
   out_6899387553266169298[55] = 0;
   out_6899387553266169298[56] = 0;
   out_6899387553266169298[57] = 0;
   out_6899387553266169298[58] = 0;
   out_6899387553266169298[59] = 0;
   out_6899387553266169298[60] = 0;
   out_6899387553266169298[61] = 0;
   out_6899387553266169298[62] = 0;
   out_6899387553266169298[63] = 0;
   out_6899387553266169298[64] = 0;
   out_6899387553266169298[65] = 0;
   out_6899387553266169298[66] = -0.5*state[4];
   out_6899387553266169298[67] = -0.5*state[5];
   out_6899387553266169298[68] = -0.5*state[6];
   out_6899387553266169298[69] = 0;
   out_6899387553266169298[70] = 0;
   out_6899387553266169298[71] = 0;
   out_6899387553266169298[72] = 0;
   out_6899387553266169298[73] = 0;
   out_6899387553266169298[74] = 0;
   out_6899387553266169298[75] = 0;
   out_6899387553266169298[76] = 0;
   out_6899387553266169298[77] = 0;
   out_6899387553266169298[78] = 0;
   out_6899387553266169298[79] = 0;
   out_6899387553266169298[80] = 0;
   out_6899387553266169298[81] = 0;
   out_6899387553266169298[82] = 0;
   out_6899387553266169298[83] = 0;
   out_6899387553266169298[84] = 0;
   out_6899387553266169298[85] = 0;
   out_6899387553266169298[86] = 0;
   out_6899387553266169298[87] = 0.5*state[3];
   out_6899387553266169298[88] = 0.5*state[6];
   out_6899387553266169298[89] = -0.5*state[5];
   out_6899387553266169298[90] = 0;
   out_6899387553266169298[91] = 0;
   out_6899387553266169298[92] = 0;
   out_6899387553266169298[93] = 0;
   out_6899387553266169298[94] = 0;
   out_6899387553266169298[95] = 0;
   out_6899387553266169298[96] = 0;
   out_6899387553266169298[97] = 0;
   out_6899387553266169298[98] = 0;
   out_6899387553266169298[99] = 0;
   out_6899387553266169298[100] = 0;
   out_6899387553266169298[101] = 0;
   out_6899387553266169298[102] = 0;
   out_6899387553266169298[103] = 0;
   out_6899387553266169298[104] = 0;
   out_6899387553266169298[105] = 0;
   out_6899387553266169298[106] = 0;
   out_6899387553266169298[107] = 0;
   out_6899387553266169298[108] = -0.5*state[6];
   out_6899387553266169298[109] = 0.5*state[3];
   out_6899387553266169298[110] = 0.5*state[4];
   out_6899387553266169298[111] = 0;
   out_6899387553266169298[112] = 0;
   out_6899387553266169298[113] = 0;
   out_6899387553266169298[114] = 0;
   out_6899387553266169298[115] = 0;
   out_6899387553266169298[116] = 0;
   out_6899387553266169298[117] = 0;
   out_6899387553266169298[118] = 0;
   out_6899387553266169298[119] = 0;
   out_6899387553266169298[120] = 0;
   out_6899387553266169298[121] = 0;
   out_6899387553266169298[122] = 0;
   out_6899387553266169298[123] = 0;
   out_6899387553266169298[124] = 0;
   out_6899387553266169298[125] = 0;
   out_6899387553266169298[126] = 0;
   out_6899387553266169298[127] = 0;
   out_6899387553266169298[128] = 0;
   out_6899387553266169298[129] = 0.5*state[5];
   out_6899387553266169298[130] = -0.5*state[4];
   out_6899387553266169298[131] = 0.5*state[3];
   out_6899387553266169298[132] = 0;
   out_6899387553266169298[133] = 0;
   out_6899387553266169298[134] = 0;
   out_6899387553266169298[135] = 0;
   out_6899387553266169298[136] = 0;
   out_6899387553266169298[137] = 0;
   out_6899387553266169298[138] = 0;
   out_6899387553266169298[139] = 0;
   out_6899387553266169298[140] = 0;
   out_6899387553266169298[141] = 0;
   out_6899387553266169298[142] = 0;
   out_6899387553266169298[143] = 0;
   out_6899387553266169298[144] = 0;
   out_6899387553266169298[145] = 0;
   out_6899387553266169298[146] = 0;
   out_6899387553266169298[147] = 0;
   out_6899387553266169298[148] = 0;
   out_6899387553266169298[149] = 0;
   out_6899387553266169298[150] = 0;
   out_6899387553266169298[151] = 0;
   out_6899387553266169298[152] = 0;
   out_6899387553266169298[153] = 1.0;
   out_6899387553266169298[154] = 0;
   out_6899387553266169298[155] = 0;
   out_6899387553266169298[156] = 0;
   out_6899387553266169298[157] = 0;
   out_6899387553266169298[158] = 0;
   out_6899387553266169298[159] = 0;
   out_6899387553266169298[160] = 0;
   out_6899387553266169298[161] = 0;
   out_6899387553266169298[162] = 0;
   out_6899387553266169298[163] = 0;
   out_6899387553266169298[164] = 0;
   out_6899387553266169298[165] = 0;
   out_6899387553266169298[166] = 0;
   out_6899387553266169298[167] = 0;
   out_6899387553266169298[168] = 0;
   out_6899387553266169298[169] = 0;
   out_6899387553266169298[170] = 0;
   out_6899387553266169298[171] = 0;
   out_6899387553266169298[172] = 0;
   out_6899387553266169298[173] = 0;
   out_6899387553266169298[174] = 0;
   out_6899387553266169298[175] = 1.0;
   out_6899387553266169298[176] = 0;
   out_6899387553266169298[177] = 0;
   out_6899387553266169298[178] = 0;
   out_6899387553266169298[179] = 0;
   out_6899387553266169298[180] = 0;
   out_6899387553266169298[181] = 0;
   out_6899387553266169298[182] = 0;
   out_6899387553266169298[183] = 0;
   out_6899387553266169298[184] = 0;
   out_6899387553266169298[185] = 0;
   out_6899387553266169298[186] = 0;
   out_6899387553266169298[187] = 0;
   out_6899387553266169298[188] = 0;
   out_6899387553266169298[189] = 0;
   out_6899387553266169298[190] = 0;
   out_6899387553266169298[191] = 0;
   out_6899387553266169298[192] = 0;
   out_6899387553266169298[193] = 0;
   out_6899387553266169298[194] = 0;
   out_6899387553266169298[195] = 0;
   out_6899387553266169298[196] = 0;
   out_6899387553266169298[197] = 1.0;
   out_6899387553266169298[198] = 0;
   out_6899387553266169298[199] = 0;
   out_6899387553266169298[200] = 0;
   out_6899387553266169298[201] = 0;
   out_6899387553266169298[202] = 0;
   out_6899387553266169298[203] = 0;
   out_6899387553266169298[204] = 0;
   out_6899387553266169298[205] = 0;
   out_6899387553266169298[206] = 0;
   out_6899387553266169298[207] = 0;
   out_6899387553266169298[208] = 0;
   out_6899387553266169298[209] = 0;
   out_6899387553266169298[210] = 0;
   out_6899387553266169298[211] = 0;
   out_6899387553266169298[212] = 0;
   out_6899387553266169298[213] = 0;
   out_6899387553266169298[214] = 0;
   out_6899387553266169298[215] = 0;
   out_6899387553266169298[216] = 0;
   out_6899387553266169298[217] = 0;
   out_6899387553266169298[218] = 0;
   out_6899387553266169298[219] = 1.0;
   out_6899387553266169298[220] = 0;
   out_6899387553266169298[221] = 0;
   out_6899387553266169298[222] = 0;
   out_6899387553266169298[223] = 0;
   out_6899387553266169298[224] = 0;
   out_6899387553266169298[225] = 0;
   out_6899387553266169298[226] = 0;
   out_6899387553266169298[227] = 0;
   out_6899387553266169298[228] = 0;
   out_6899387553266169298[229] = 0;
   out_6899387553266169298[230] = 0;
   out_6899387553266169298[231] = 0;
   out_6899387553266169298[232] = 0;
   out_6899387553266169298[233] = 0;
   out_6899387553266169298[234] = 0;
   out_6899387553266169298[235] = 0;
   out_6899387553266169298[236] = 0;
   out_6899387553266169298[237] = 0;
   out_6899387553266169298[238] = 0;
   out_6899387553266169298[239] = 0;
   out_6899387553266169298[240] = 0;
   out_6899387553266169298[241] = 1.0;
   out_6899387553266169298[242] = 0;
   out_6899387553266169298[243] = 0;
   out_6899387553266169298[244] = 0;
   out_6899387553266169298[245] = 0;
   out_6899387553266169298[246] = 0;
   out_6899387553266169298[247] = 0;
   out_6899387553266169298[248] = 0;
   out_6899387553266169298[249] = 0;
   out_6899387553266169298[250] = 0;
   out_6899387553266169298[251] = 0;
   out_6899387553266169298[252] = 0;
   out_6899387553266169298[253] = 0;
   out_6899387553266169298[254] = 0;
   out_6899387553266169298[255] = 0;
   out_6899387553266169298[256] = 0;
   out_6899387553266169298[257] = 0;
   out_6899387553266169298[258] = 0;
   out_6899387553266169298[259] = 0;
   out_6899387553266169298[260] = 0;
   out_6899387553266169298[261] = 0;
   out_6899387553266169298[262] = 0;
   out_6899387553266169298[263] = 1.0;
   out_6899387553266169298[264] = 0;
   out_6899387553266169298[265] = 0;
   out_6899387553266169298[266] = 0;
   out_6899387553266169298[267] = 0;
   out_6899387553266169298[268] = 0;
   out_6899387553266169298[269] = 0;
   out_6899387553266169298[270] = 0;
   out_6899387553266169298[271] = 0;
   out_6899387553266169298[272] = 0;
   out_6899387553266169298[273] = 0;
   out_6899387553266169298[274] = 0;
   out_6899387553266169298[275] = 0;
   out_6899387553266169298[276] = 0;
   out_6899387553266169298[277] = 0;
   out_6899387553266169298[278] = 0;
   out_6899387553266169298[279] = 0;
   out_6899387553266169298[280] = 0;
   out_6899387553266169298[281] = 0;
   out_6899387553266169298[282] = 0;
   out_6899387553266169298[283] = 0;
   out_6899387553266169298[284] = 0;
   out_6899387553266169298[285] = 1.0;
   out_6899387553266169298[286] = 0;
   out_6899387553266169298[287] = 0;
   out_6899387553266169298[288] = 0;
   out_6899387553266169298[289] = 0;
   out_6899387553266169298[290] = 0;
   out_6899387553266169298[291] = 0;
   out_6899387553266169298[292] = 0;
   out_6899387553266169298[293] = 0;
   out_6899387553266169298[294] = 0;
   out_6899387553266169298[295] = 0;
   out_6899387553266169298[296] = 0;
   out_6899387553266169298[297] = 0;
   out_6899387553266169298[298] = 0;
   out_6899387553266169298[299] = 0;
   out_6899387553266169298[300] = 0;
   out_6899387553266169298[301] = 0;
   out_6899387553266169298[302] = 0;
   out_6899387553266169298[303] = 0;
   out_6899387553266169298[304] = 0;
   out_6899387553266169298[305] = 0;
   out_6899387553266169298[306] = 0;
   out_6899387553266169298[307] = 1.0;
   out_6899387553266169298[308] = 0;
   out_6899387553266169298[309] = 0;
   out_6899387553266169298[310] = 0;
   out_6899387553266169298[311] = 0;
   out_6899387553266169298[312] = 0;
   out_6899387553266169298[313] = 0;
   out_6899387553266169298[314] = 0;
   out_6899387553266169298[315] = 0;
   out_6899387553266169298[316] = 0;
   out_6899387553266169298[317] = 0;
   out_6899387553266169298[318] = 0;
   out_6899387553266169298[319] = 0;
   out_6899387553266169298[320] = 0;
   out_6899387553266169298[321] = 0;
   out_6899387553266169298[322] = 0;
   out_6899387553266169298[323] = 0;
   out_6899387553266169298[324] = 0;
   out_6899387553266169298[325] = 0;
   out_6899387553266169298[326] = 0;
   out_6899387553266169298[327] = 0;
   out_6899387553266169298[328] = 0;
   out_6899387553266169298[329] = 1.0;
   out_6899387553266169298[330] = 0;
   out_6899387553266169298[331] = 0;
   out_6899387553266169298[332] = 0;
   out_6899387553266169298[333] = 0;
   out_6899387553266169298[334] = 0;
   out_6899387553266169298[335] = 0;
   out_6899387553266169298[336] = 0;
   out_6899387553266169298[337] = 0;
   out_6899387553266169298[338] = 0;
   out_6899387553266169298[339] = 0;
   out_6899387553266169298[340] = 0;
   out_6899387553266169298[341] = 0;
   out_6899387553266169298[342] = 0;
   out_6899387553266169298[343] = 0;
   out_6899387553266169298[344] = 0;
   out_6899387553266169298[345] = 0;
   out_6899387553266169298[346] = 0;
   out_6899387553266169298[347] = 0;
   out_6899387553266169298[348] = 0;
   out_6899387553266169298[349] = 0;
   out_6899387553266169298[350] = 0;
   out_6899387553266169298[351] = 1.0;
   out_6899387553266169298[352] = 0;
   out_6899387553266169298[353] = 0;
   out_6899387553266169298[354] = 0;
   out_6899387553266169298[355] = 0;
   out_6899387553266169298[356] = 0;
   out_6899387553266169298[357] = 0;
   out_6899387553266169298[358] = 0;
   out_6899387553266169298[359] = 0;
   out_6899387553266169298[360] = 0;
   out_6899387553266169298[361] = 0;
   out_6899387553266169298[362] = 0;
   out_6899387553266169298[363] = 0;
   out_6899387553266169298[364] = 0;
   out_6899387553266169298[365] = 0;
   out_6899387553266169298[366] = 0;
   out_6899387553266169298[367] = 0;
   out_6899387553266169298[368] = 0;
   out_6899387553266169298[369] = 0;
   out_6899387553266169298[370] = 0;
   out_6899387553266169298[371] = 0;
   out_6899387553266169298[372] = 0;
   out_6899387553266169298[373] = 1.0;
   out_6899387553266169298[374] = 0;
   out_6899387553266169298[375] = 0;
   out_6899387553266169298[376] = 0;
   out_6899387553266169298[377] = 0;
   out_6899387553266169298[378] = 0;
   out_6899387553266169298[379] = 0;
   out_6899387553266169298[380] = 0;
   out_6899387553266169298[381] = 0;
   out_6899387553266169298[382] = 0;
   out_6899387553266169298[383] = 0;
   out_6899387553266169298[384] = 0;
   out_6899387553266169298[385] = 0;
   out_6899387553266169298[386] = 0;
   out_6899387553266169298[387] = 0;
   out_6899387553266169298[388] = 0;
   out_6899387553266169298[389] = 0;
   out_6899387553266169298[390] = 0;
   out_6899387553266169298[391] = 0;
   out_6899387553266169298[392] = 0;
   out_6899387553266169298[393] = 0;
   out_6899387553266169298[394] = 0;
   out_6899387553266169298[395] = 1.0;
   out_6899387553266169298[396] = 0;
   out_6899387553266169298[397] = 0;
   out_6899387553266169298[398] = 0;
   out_6899387553266169298[399] = 0;
   out_6899387553266169298[400] = 0;
   out_6899387553266169298[401] = 0;
   out_6899387553266169298[402] = 0;
   out_6899387553266169298[403] = 0;
   out_6899387553266169298[404] = 0;
   out_6899387553266169298[405] = 0;
   out_6899387553266169298[406] = 0;
   out_6899387553266169298[407] = 0;
   out_6899387553266169298[408] = 0;
   out_6899387553266169298[409] = 0;
   out_6899387553266169298[410] = 0;
   out_6899387553266169298[411] = 0;
   out_6899387553266169298[412] = 0;
   out_6899387553266169298[413] = 0;
   out_6899387553266169298[414] = 0;
   out_6899387553266169298[415] = 0;
   out_6899387553266169298[416] = 0;
   out_6899387553266169298[417] = 1.0;
   out_6899387553266169298[418] = 0;
   out_6899387553266169298[419] = 0;
   out_6899387553266169298[420] = 0;
   out_6899387553266169298[421] = 0;
   out_6899387553266169298[422] = 0;
   out_6899387553266169298[423] = 0;
   out_6899387553266169298[424] = 0;
   out_6899387553266169298[425] = 0;
   out_6899387553266169298[426] = 0;
   out_6899387553266169298[427] = 0;
   out_6899387553266169298[428] = 0;
   out_6899387553266169298[429] = 0;
   out_6899387553266169298[430] = 0;
   out_6899387553266169298[431] = 0;
   out_6899387553266169298[432] = 0;
   out_6899387553266169298[433] = 0;
   out_6899387553266169298[434] = 0;
   out_6899387553266169298[435] = 0;
   out_6899387553266169298[436] = 0;
   out_6899387553266169298[437] = 0;
   out_6899387553266169298[438] = 0;
   out_6899387553266169298[439] = 1.0;
   out_6899387553266169298[440] = 0;
   out_6899387553266169298[441] = 0;
   out_6899387553266169298[442] = 0;
   out_6899387553266169298[443] = 0;
   out_6899387553266169298[444] = 0;
   out_6899387553266169298[445] = 0;
   out_6899387553266169298[446] = 0;
   out_6899387553266169298[447] = 0;
   out_6899387553266169298[448] = 0;
   out_6899387553266169298[449] = 0;
   out_6899387553266169298[450] = 0;
   out_6899387553266169298[451] = 0;
   out_6899387553266169298[452] = 0;
   out_6899387553266169298[453] = 0;
   out_6899387553266169298[454] = 0;
   out_6899387553266169298[455] = 0;
   out_6899387553266169298[456] = 0;
   out_6899387553266169298[457] = 0;
   out_6899387553266169298[458] = 0;
   out_6899387553266169298[459] = 0;
   out_6899387553266169298[460] = 0;
   out_6899387553266169298[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_4238634013988088602) {
   out_4238634013988088602[0] = dt*state[7] + state[0];
   out_4238634013988088602[1] = dt*state[8] + state[1];
   out_4238634013988088602[2] = dt*state[9] + state[2];
   out_4238634013988088602[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_4238634013988088602[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_4238634013988088602[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_4238634013988088602[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_4238634013988088602[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_4238634013988088602[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_4238634013988088602[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_4238634013988088602[10] = state[10];
   out_4238634013988088602[11] = state[11];
   out_4238634013988088602[12] = state[12];
   out_4238634013988088602[13] = state[13];
   out_4238634013988088602[14] = state[14];
   out_4238634013988088602[15] = state[15];
   out_4238634013988088602[16] = state[16];
   out_4238634013988088602[17] = state[17];
   out_4238634013988088602[18] = state[18];
   out_4238634013988088602[19] = state[19];
   out_4238634013988088602[20] = state[20];
   out_4238634013988088602[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5205530917026691074) {
   out_5205530917026691074[0] = 1;
   out_5205530917026691074[1] = 0;
   out_5205530917026691074[2] = 0;
   out_5205530917026691074[3] = 0;
   out_5205530917026691074[4] = 0;
   out_5205530917026691074[5] = 0;
   out_5205530917026691074[6] = dt;
   out_5205530917026691074[7] = 0;
   out_5205530917026691074[8] = 0;
   out_5205530917026691074[9] = 0;
   out_5205530917026691074[10] = 0;
   out_5205530917026691074[11] = 0;
   out_5205530917026691074[12] = 0;
   out_5205530917026691074[13] = 0;
   out_5205530917026691074[14] = 0;
   out_5205530917026691074[15] = 0;
   out_5205530917026691074[16] = 0;
   out_5205530917026691074[17] = 0;
   out_5205530917026691074[18] = 0;
   out_5205530917026691074[19] = 0;
   out_5205530917026691074[20] = 0;
   out_5205530917026691074[21] = 0;
   out_5205530917026691074[22] = 1;
   out_5205530917026691074[23] = 0;
   out_5205530917026691074[24] = 0;
   out_5205530917026691074[25] = 0;
   out_5205530917026691074[26] = 0;
   out_5205530917026691074[27] = 0;
   out_5205530917026691074[28] = dt;
   out_5205530917026691074[29] = 0;
   out_5205530917026691074[30] = 0;
   out_5205530917026691074[31] = 0;
   out_5205530917026691074[32] = 0;
   out_5205530917026691074[33] = 0;
   out_5205530917026691074[34] = 0;
   out_5205530917026691074[35] = 0;
   out_5205530917026691074[36] = 0;
   out_5205530917026691074[37] = 0;
   out_5205530917026691074[38] = 0;
   out_5205530917026691074[39] = 0;
   out_5205530917026691074[40] = 0;
   out_5205530917026691074[41] = 0;
   out_5205530917026691074[42] = 0;
   out_5205530917026691074[43] = 0;
   out_5205530917026691074[44] = 1;
   out_5205530917026691074[45] = 0;
   out_5205530917026691074[46] = 0;
   out_5205530917026691074[47] = 0;
   out_5205530917026691074[48] = 0;
   out_5205530917026691074[49] = 0;
   out_5205530917026691074[50] = dt;
   out_5205530917026691074[51] = 0;
   out_5205530917026691074[52] = 0;
   out_5205530917026691074[53] = 0;
   out_5205530917026691074[54] = 0;
   out_5205530917026691074[55] = 0;
   out_5205530917026691074[56] = 0;
   out_5205530917026691074[57] = 0;
   out_5205530917026691074[58] = 0;
   out_5205530917026691074[59] = 0;
   out_5205530917026691074[60] = 0;
   out_5205530917026691074[61] = 0;
   out_5205530917026691074[62] = 0;
   out_5205530917026691074[63] = 0;
   out_5205530917026691074[64] = 0;
   out_5205530917026691074[65] = 0;
   out_5205530917026691074[66] = 1;
   out_5205530917026691074[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5205530917026691074[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5205530917026691074[69] = 0;
   out_5205530917026691074[70] = 0;
   out_5205530917026691074[71] = 0;
   out_5205530917026691074[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5205530917026691074[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5205530917026691074[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5205530917026691074[75] = 0;
   out_5205530917026691074[76] = 0;
   out_5205530917026691074[77] = 0;
   out_5205530917026691074[78] = 0;
   out_5205530917026691074[79] = 0;
   out_5205530917026691074[80] = 0;
   out_5205530917026691074[81] = 0;
   out_5205530917026691074[82] = 0;
   out_5205530917026691074[83] = 0;
   out_5205530917026691074[84] = 0;
   out_5205530917026691074[85] = 0;
   out_5205530917026691074[86] = 0;
   out_5205530917026691074[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5205530917026691074[88] = 1;
   out_5205530917026691074[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5205530917026691074[90] = 0;
   out_5205530917026691074[91] = 0;
   out_5205530917026691074[92] = 0;
   out_5205530917026691074[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5205530917026691074[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5205530917026691074[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5205530917026691074[96] = 0;
   out_5205530917026691074[97] = 0;
   out_5205530917026691074[98] = 0;
   out_5205530917026691074[99] = 0;
   out_5205530917026691074[100] = 0;
   out_5205530917026691074[101] = 0;
   out_5205530917026691074[102] = 0;
   out_5205530917026691074[103] = 0;
   out_5205530917026691074[104] = 0;
   out_5205530917026691074[105] = 0;
   out_5205530917026691074[106] = 0;
   out_5205530917026691074[107] = 0;
   out_5205530917026691074[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5205530917026691074[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5205530917026691074[110] = 1;
   out_5205530917026691074[111] = 0;
   out_5205530917026691074[112] = 0;
   out_5205530917026691074[113] = 0;
   out_5205530917026691074[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5205530917026691074[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5205530917026691074[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5205530917026691074[117] = 0;
   out_5205530917026691074[118] = 0;
   out_5205530917026691074[119] = 0;
   out_5205530917026691074[120] = 0;
   out_5205530917026691074[121] = 0;
   out_5205530917026691074[122] = 0;
   out_5205530917026691074[123] = 0;
   out_5205530917026691074[124] = 0;
   out_5205530917026691074[125] = 0;
   out_5205530917026691074[126] = 0;
   out_5205530917026691074[127] = 0;
   out_5205530917026691074[128] = 0;
   out_5205530917026691074[129] = 0;
   out_5205530917026691074[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5205530917026691074[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5205530917026691074[132] = 1;
   out_5205530917026691074[133] = 0;
   out_5205530917026691074[134] = 0;
   out_5205530917026691074[135] = 0;
   out_5205530917026691074[136] = 0;
   out_5205530917026691074[137] = 0;
   out_5205530917026691074[138] = 0;
   out_5205530917026691074[139] = 0;
   out_5205530917026691074[140] = 0;
   out_5205530917026691074[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5205530917026691074[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5205530917026691074[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5205530917026691074[144] = 0;
   out_5205530917026691074[145] = 0;
   out_5205530917026691074[146] = 0;
   out_5205530917026691074[147] = 0;
   out_5205530917026691074[148] = 0;
   out_5205530917026691074[149] = 0;
   out_5205530917026691074[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5205530917026691074[151] = 0;
   out_5205530917026691074[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5205530917026691074[153] = 0;
   out_5205530917026691074[154] = 1;
   out_5205530917026691074[155] = 0;
   out_5205530917026691074[156] = 0;
   out_5205530917026691074[157] = 0;
   out_5205530917026691074[158] = 0;
   out_5205530917026691074[159] = 0;
   out_5205530917026691074[160] = 0;
   out_5205530917026691074[161] = 0;
   out_5205530917026691074[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5205530917026691074[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5205530917026691074[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5205530917026691074[165] = 0;
   out_5205530917026691074[166] = 0;
   out_5205530917026691074[167] = 0;
   out_5205530917026691074[168] = 0;
   out_5205530917026691074[169] = 0;
   out_5205530917026691074[170] = 0;
   out_5205530917026691074[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5205530917026691074[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5205530917026691074[173] = 0;
   out_5205530917026691074[174] = 0;
   out_5205530917026691074[175] = 0;
   out_5205530917026691074[176] = 1;
   out_5205530917026691074[177] = 0;
   out_5205530917026691074[178] = 0;
   out_5205530917026691074[179] = 0;
   out_5205530917026691074[180] = 0;
   out_5205530917026691074[181] = 0;
   out_5205530917026691074[182] = 0;
   out_5205530917026691074[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5205530917026691074[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5205530917026691074[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5205530917026691074[186] = 0;
   out_5205530917026691074[187] = 0;
   out_5205530917026691074[188] = 0;
   out_5205530917026691074[189] = 0;
   out_5205530917026691074[190] = 0;
   out_5205530917026691074[191] = 0;
   out_5205530917026691074[192] = 0;
   out_5205530917026691074[193] = 0;
   out_5205530917026691074[194] = 0;
   out_5205530917026691074[195] = 0;
   out_5205530917026691074[196] = 0;
   out_5205530917026691074[197] = 0;
   out_5205530917026691074[198] = 1;
   out_5205530917026691074[199] = 0;
   out_5205530917026691074[200] = 0;
   out_5205530917026691074[201] = 0;
   out_5205530917026691074[202] = 0;
   out_5205530917026691074[203] = 0;
   out_5205530917026691074[204] = 0;
   out_5205530917026691074[205] = 0;
   out_5205530917026691074[206] = 0;
   out_5205530917026691074[207] = 0;
   out_5205530917026691074[208] = 0;
   out_5205530917026691074[209] = 0;
   out_5205530917026691074[210] = 0;
   out_5205530917026691074[211] = 0;
   out_5205530917026691074[212] = 0;
   out_5205530917026691074[213] = 0;
   out_5205530917026691074[214] = 0;
   out_5205530917026691074[215] = 0;
   out_5205530917026691074[216] = 0;
   out_5205530917026691074[217] = 0;
   out_5205530917026691074[218] = 0;
   out_5205530917026691074[219] = 0;
   out_5205530917026691074[220] = 1;
   out_5205530917026691074[221] = 0;
   out_5205530917026691074[222] = 0;
   out_5205530917026691074[223] = 0;
   out_5205530917026691074[224] = 0;
   out_5205530917026691074[225] = 0;
   out_5205530917026691074[226] = 0;
   out_5205530917026691074[227] = 0;
   out_5205530917026691074[228] = 0;
   out_5205530917026691074[229] = 0;
   out_5205530917026691074[230] = 0;
   out_5205530917026691074[231] = 0;
   out_5205530917026691074[232] = 0;
   out_5205530917026691074[233] = 0;
   out_5205530917026691074[234] = 0;
   out_5205530917026691074[235] = 0;
   out_5205530917026691074[236] = 0;
   out_5205530917026691074[237] = 0;
   out_5205530917026691074[238] = 0;
   out_5205530917026691074[239] = 0;
   out_5205530917026691074[240] = 0;
   out_5205530917026691074[241] = 0;
   out_5205530917026691074[242] = 1;
   out_5205530917026691074[243] = 0;
   out_5205530917026691074[244] = 0;
   out_5205530917026691074[245] = 0;
   out_5205530917026691074[246] = 0;
   out_5205530917026691074[247] = 0;
   out_5205530917026691074[248] = 0;
   out_5205530917026691074[249] = 0;
   out_5205530917026691074[250] = 0;
   out_5205530917026691074[251] = 0;
   out_5205530917026691074[252] = 0;
   out_5205530917026691074[253] = 0;
   out_5205530917026691074[254] = 0;
   out_5205530917026691074[255] = 0;
   out_5205530917026691074[256] = 0;
   out_5205530917026691074[257] = 0;
   out_5205530917026691074[258] = 0;
   out_5205530917026691074[259] = 0;
   out_5205530917026691074[260] = 0;
   out_5205530917026691074[261] = 0;
   out_5205530917026691074[262] = 0;
   out_5205530917026691074[263] = 0;
   out_5205530917026691074[264] = 1;
   out_5205530917026691074[265] = 0;
   out_5205530917026691074[266] = 0;
   out_5205530917026691074[267] = 0;
   out_5205530917026691074[268] = 0;
   out_5205530917026691074[269] = 0;
   out_5205530917026691074[270] = 0;
   out_5205530917026691074[271] = 0;
   out_5205530917026691074[272] = 0;
   out_5205530917026691074[273] = 0;
   out_5205530917026691074[274] = 0;
   out_5205530917026691074[275] = 0;
   out_5205530917026691074[276] = 0;
   out_5205530917026691074[277] = 0;
   out_5205530917026691074[278] = 0;
   out_5205530917026691074[279] = 0;
   out_5205530917026691074[280] = 0;
   out_5205530917026691074[281] = 0;
   out_5205530917026691074[282] = 0;
   out_5205530917026691074[283] = 0;
   out_5205530917026691074[284] = 0;
   out_5205530917026691074[285] = 0;
   out_5205530917026691074[286] = 1;
   out_5205530917026691074[287] = 0;
   out_5205530917026691074[288] = 0;
   out_5205530917026691074[289] = 0;
   out_5205530917026691074[290] = 0;
   out_5205530917026691074[291] = 0;
   out_5205530917026691074[292] = 0;
   out_5205530917026691074[293] = 0;
   out_5205530917026691074[294] = 0;
   out_5205530917026691074[295] = 0;
   out_5205530917026691074[296] = 0;
   out_5205530917026691074[297] = 0;
   out_5205530917026691074[298] = 0;
   out_5205530917026691074[299] = 0;
   out_5205530917026691074[300] = 0;
   out_5205530917026691074[301] = 0;
   out_5205530917026691074[302] = 0;
   out_5205530917026691074[303] = 0;
   out_5205530917026691074[304] = 0;
   out_5205530917026691074[305] = 0;
   out_5205530917026691074[306] = 0;
   out_5205530917026691074[307] = 0;
   out_5205530917026691074[308] = 1;
   out_5205530917026691074[309] = 0;
   out_5205530917026691074[310] = 0;
   out_5205530917026691074[311] = 0;
   out_5205530917026691074[312] = 0;
   out_5205530917026691074[313] = 0;
   out_5205530917026691074[314] = 0;
   out_5205530917026691074[315] = 0;
   out_5205530917026691074[316] = 0;
   out_5205530917026691074[317] = 0;
   out_5205530917026691074[318] = 0;
   out_5205530917026691074[319] = 0;
   out_5205530917026691074[320] = 0;
   out_5205530917026691074[321] = 0;
   out_5205530917026691074[322] = 0;
   out_5205530917026691074[323] = 0;
   out_5205530917026691074[324] = 0;
   out_5205530917026691074[325] = 0;
   out_5205530917026691074[326] = 0;
   out_5205530917026691074[327] = 0;
   out_5205530917026691074[328] = 0;
   out_5205530917026691074[329] = 0;
   out_5205530917026691074[330] = 1;
   out_5205530917026691074[331] = 0;
   out_5205530917026691074[332] = 0;
   out_5205530917026691074[333] = 0;
   out_5205530917026691074[334] = 0;
   out_5205530917026691074[335] = 0;
   out_5205530917026691074[336] = 0;
   out_5205530917026691074[337] = 0;
   out_5205530917026691074[338] = 0;
   out_5205530917026691074[339] = 0;
   out_5205530917026691074[340] = 0;
   out_5205530917026691074[341] = 0;
   out_5205530917026691074[342] = 0;
   out_5205530917026691074[343] = 0;
   out_5205530917026691074[344] = 0;
   out_5205530917026691074[345] = 0;
   out_5205530917026691074[346] = 0;
   out_5205530917026691074[347] = 0;
   out_5205530917026691074[348] = 0;
   out_5205530917026691074[349] = 0;
   out_5205530917026691074[350] = 0;
   out_5205530917026691074[351] = 0;
   out_5205530917026691074[352] = 1;
   out_5205530917026691074[353] = 0;
   out_5205530917026691074[354] = 0;
   out_5205530917026691074[355] = 0;
   out_5205530917026691074[356] = 0;
   out_5205530917026691074[357] = 0;
   out_5205530917026691074[358] = 0;
   out_5205530917026691074[359] = 0;
   out_5205530917026691074[360] = 0;
   out_5205530917026691074[361] = 0;
   out_5205530917026691074[362] = 0;
   out_5205530917026691074[363] = 0;
   out_5205530917026691074[364] = 0;
   out_5205530917026691074[365] = 0;
   out_5205530917026691074[366] = 0;
   out_5205530917026691074[367] = 0;
   out_5205530917026691074[368] = 0;
   out_5205530917026691074[369] = 0;
   out_5205530917026691074[370] = 0;
   out_5205530917026691074[371] = 0;
   out_5205530917026691074[372] = 0;
   out_5205530917026691074[373] = 0;
   out_5205530917026691074[374] = 1;
   out_5205530917026691074[375] = 0;
   out_5205530917026691074[376] = 0;
   out_5205530917026691074[377] = 0;
   out_5205530917026691074[378] = 0;
   out_5205530917026691074[379] = 0;
   out_5205530917026691074[380] = 0;
   out_5205530917026691074[381] = 0;
   out_5205530917026691074[382] = 0;
   out_5205530917026691074[383] = 0;
   out_5205530917026691074[384] = 0;
   out_5205530917026691074[385] = 0;
   out_5205530917026691074[386] = 0;
   out_5205530917026691074[387] = 0;
   out_5205530917026691074[388] = 0;
   out_5205530917026691074[389] = 0;
   out_5205530917026691074[390] = 0;
   out_5205530917026691074[391] = 0;
   out_5205530917026691074[392] = 0;
   out_5205530917026691074[393] = 0;
   out_5205530917026691074[394] = 0;
   out_5205530917026691074[395] = 0;
   out_5205530917026691074[396] = 1;
   out_5205530917026691074[397] = 0;
   out_5205530917026691074[398] = 0;
   out_5205530917026691074[399] = 0;
   out_5205530917026691074[400] = 0;
   out_5205530917026691074[401] = 0;
   out_5205530917026691074[402] = 0;
   out_5205530917026691074[403] = 0;
   out_5205530917026691074[404] = 0;
   out_5205530917026691074[405] = 0;
   out_5205530917026691074[406] = 0;
   out_5205530917026691074[407] = 0;
   out_5205530917026691074[408] = 0;
   out_5205530917026691074[409] = 0;
   out_5205530917026691074[410] = 0;
   out_5205530917026691074[411] = 0;
   out_5205530917026691074[412] = 0;
   out_5205530917026691074[413] = 0;
   out_5205530917026691074[414] = 0;
   out_5205530917026691074[415] = 0;
   out_5205530917026691074[416] = 0;
   out_5205530917026691074[417] = 0;
   out_5205530917026691074[418] = 1;
   out_5205530917026691074[419] = 0;
   out_5205530917026691074[420] = 0;
   out_5205530917026691074[421] = 0;
   out_5205530917026691074[422] = 0;
   out_5205530917026691074[423] = 0;
   out_5205530917026691074[424] = 0;
   out_5205530917026691074[425] = 0;
   out_5205530917026691074[426] = 0;
   out_5205530917026691074[427] = 0;
   out_5205530917026691074[428] = 0;
   out_5205530917026691074[429] = 0;
   out_5205530917026691074[430] = 0;
   out_5205530917026691074[431] = 0;
   out_5205530917026691074[432] = 0;
   out_5205530917026691074[433] = 0;
   out_5205530917026691074[434] = 0;
   out_5205530917026691074[435] = 0;
   out_5205530917026691074[436] = 0;
   out_5205530917026691074[437] = 0;
   out_5205530917026691074[438] = 0;
   out_5205530917026691074[439] = 0;
   out_5205530917026691074[440] = 1;
}
void h_4(double *state, double *unused, double *out_5549312776198825725) {
   out_5549312776198825725[0] = state[10] + state[13];
   out_5549312776198825725[1] = state[11] + state[14];
   out_5549312776198825725[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4282483772114190731) {
   out_4282483772114190731[0] = 0;
   out_4282483772114190731[1] = 0;
   out_4282483772114190731[2] = 0;
   out_4282483772114190731[3] = 0;
   out_4282483772114190731[4] = 0;
   out_4282483772114190731[5] = 0;
   out_4282483772114190731[6] = 0;
   out_4282483772114190731[7] = 0;
   out_4282483772114190731[8] = 0;
   out_4282483772114190731[9] = 0;
   out_4282483772114190731[10] = 1;
   out_4282483772114190731[11] = 0;
   out_4282483772114190731[12] = 0;
   out_4282483772114190731[13] = 1;
   out_4282483772114190731[14] = 0;
   out_4282483772114190731[15] = 0;
   out_4282483772114190731[16] = 0;
   out_4282483772114190731[17] = 0;
   out_4282483772114190731[18] = 0;
   out_4282483772114190731[19] = 0;
   out_4282483772114190731[20] = 0;
   out_4282483772114190731[21] = 0;
   out_4282483772114190731[22] = 0;
   out_4282483772114190731[23] = 0;
   out_4282483772114190731[24] = 0;
   out_4282483772114190731[25] = 0;
   out_4282483772114190731[26] = 0;
   out_4282483772114190731[27] = 0;
   out_4282483772114190731[28] = 0;
   out_4282483772114190731[29] = 0;
   out_4282483772114190731[30] = 0;
   out_4282483772114190731[31] = 0;
   out_4282483772114190731[32] = 0;
   out_4282483772114190731[33] = 1;
   out_4282483772114190731[34] = 0;
   out_4282483772114190731[35] = 0;
   out_4282483772114190731[36] = 1;
   out_4282483772114190731[37] = 0;
   out_4282483772114190731[38] = 0;
   out_4282483772114190731[39] = 0;
   out_4282483772114190731[40] = 0;
   out_4282483772114190731[41] = 0;
   out_4282483772114190731[42] = 0;
   out_4282483772114190731[43] = 0;
   out_4282483772114190731[44] = 0;
   out_4282483772114190731[45] = 0;
   out_4282483772114190731[46] = 0;
   out_4282483772114190731[47] = 0;
   out_4282483772114190731[48] = 0;
   out_4282483772114190731[49] = 0;
   out_4282483772114190731[50] = 0;
   out_4282483772114190731[51] = 0;
   out_4282483772114190731[52] = 0;
   out_4282483772114190731[53] = 0;
   out_4282483772114190731[54] = 0;
   out_4282483772114190731[55] = 0;
   out_4282483772114190731[56] = 1;
   out_4282483772114190731[57] = 0;
   out_4282483772114190731[58] = 0;
   out_4282483772114190731[59] = 1;
   out_4282483772114190731[60] = 0;
   out_4282483772114190731[61] = 0;
   out_4282483772114190731[62] = 0;
   out_4282483772114190731[63] = 0;
   out_4282483772114190731[64] = 0;
   out_4282483772114190731[65] = 0;
}
void h_9(double *state, double *unused, double *out_9114658190125024279) {
   out_9114658190125024279[0] = state[10];
   out_9114658190125024279[1] = state[11];
   out_9114658190125024279[2] = state[12];
}
void H_9(double *state, double *unused, double *out_3004735163150256739) {
   out_3004735163150256739[0] = 0;
   out_3004735163150256739[1] = 0;
   out_3004735163150256739[2] = 0;
   out_3004735163150256739[3] = 0;
   out_3004735163150256739[4] = 0;
   out_3004735163150256739[5] = 0;
   out_3004735163150256739[6] = 0;
   out_3004735163150256739[7] = 0;
   out_3004735163150256739[8] = 0;
   out_3004735163150256739[9] = 0;
   out_3004735163150256739[10] = 1;
   out_3004735163150256739[11] = 0;
   out_3004735163150256739[12] = 0;
   out_3004735163150256739[13] = 0;
   out_3004735163150256739[14] = 0;
   out_3004735163150256739[15] = 0;
   out_3004735163150256739[16] = 0;
   out_3004735163150256739[17] = 0;
   out_3004735163150256739[18] = 0;
   out_3004735163150256739[19] = 0;
   out_3004735163150256739[20] = 0;
   out_3004735163150256739[21] = 0;
   out_3004735163150256739[22] = 0;
   out_3004735163150256739[23] = 0;
   out_3004735163150256739[24] = 0;
   out_3004735163150256739[25] = 0;
   out_3004735163150256739[26] = 0;
   out_3004735163150256739[27] = 0;
   out_3004735163150256739[28] = 0;
   out_3004735163150256739[29] = 0;
   out_3004735163150256739[30] = 0;
   out_3004735163150256739[31] = 0;
   out_3004735163150256739[32] = 0;
   out_3004735163150256739[33] = 1;
   out_3004735163150256739[34] = 0;
   out_3004735163150256739[35] = 0;
   out_3004735163150256739[36] = 0;
   out_3004735163150256739[37] = 0;
   out_3004735163150256739[38] = 0;
   out_3004735163150256739[39] = 0;
   out_3004735163150256739[40] = 0;
   out_3004735163150256739[41] = 0;
   out_3004735163150256739[42] = 0;
   out_3004735163150256739[43] = 0;
   out_3004735163150256739[44] = 0;
   out_3004735163150256739[45] = 0;
   out_3004735163150256739[46] = 0;
   out_3004735163150256739[47] = 0;
   out_3004735163150256739[48] = 0;
   out_3004735163150256739[49] = 0;
   out_3004735163150256739[50] = 0;
   out_3004735163150256739[51] = 0;
   out_3004735163150256739[52] = 0;
   out_3004735163150256739[53] = 0;
   out_3004735163150256739[54] = 0;
   out_3004735163150256739[55] = 0;
   out_3004735163150256739[56] = 1;
   out_3004735163150256739[57] = 0;
   out_3004735163150256739[58] = 0;
   out_3004735163150256739[59] = 0;
   out_3004735163150256739[60] = 0;
   out_3004735163150256739[61] = 0;
   out_3004735163150256739[62] = 0;
   out_3004735163150256739[63] = 0;
   out_3004735163150256739[64] = 0;
   out_3004735163150256739[65] = 0;
}
void h_10(double *state, double *unused, double *out_7393512525595384262) {
   out_7393512525595384262[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_7393512525595384262[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_7393512525595384262[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_3097326390654242864) {
   out_3097326390654242864[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3097326390654242864[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3097326390654242864[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_3097326390654242864[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3097326390654242864[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3097326390654242864[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3097326390654242864[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3097326390654242864[7] = 0;
   out_3097326390654242864[8] = 0;
   out_3097326390654242864[9] = 0;
   out_3097326390654242864[10] = 0;
   out_3097326390654242864[11] = 0;
   out_3097326390654242864[12] = 0;
   out_3097326390654242864[13] = 0;
   out_3097326390654242864[14] = 0;
   out_3097326390654242864[15] = 0;
   out_3097326390654242864[16] = 1;
   out_3097326390654242864[17] = 0;
   out_3097326390654242864[18] = 0;
   out_3097326390654242864[19] = 1;
   out_3097326390654242864[20] = 0;
   out_3097326390654242864[21] = 0;
   out_3097326390654242864[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3097326390654242864[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3097326390654242864[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_3097326390654242864[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3097326390654242864[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3097326390654242864[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3097326390654242864[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3097326390654242864[29] = 0;
   out_3097326390654242864[30] = 0;
   out_3097326390654242864[31] = 0;
   out_3097326390654242864[32] = 0;
   out_3097326390654242864[33] = 0;
   out_3097326390654242864[34] = 0;
   out_3097326390654242864[35] = 0;
   out_3097326390654242864[36] = 0;
   out_3097326390654242864[37] = 0;
   out_3097326390654242864[38] = 0;
   out_3097326390654242864[39] = 1;
   out_3097326390654242864[40] = 0;
   out_3097326390654242864[41] = 0;
   out_3097326390654242864[42] = 1;
   out_3097326390654242864[43] = 0;
   out_3097326390654242864[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_3097326390654242864[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_3097326390654242864[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3097326390654242864[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3097326390654242864[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3097326390654242864[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3097326390654242864[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3097326390654242864[51] = 0;
   out_3097326390654242864[52] = 0;
   out_3097326390654242864[53] = 0;
   out_3097326390654242864[54] = 0;
   out_3097326390654242864[55] = 0;
   out_3097326390654242864[56] = 0;
   out_3097326390654242864[57] = 0;
   out_3097326390654242864[58] = 0;
   out_3097326390654242864[59] = 0;
   out_3097326390654242864[60] = 0;
   out_3097326390654242864[61] = 0;
   out_3097326390654242864[62] = 1;
   out_3097326390654242864[63] = 0;
   out_3097326390654242864[64] = 0;
   out_3097326390654242864[65] = 1;
}
void h_12(double *state, double *unused, double *out_8696878634488970934) {
   out_8696878634488970934[0] = state[0];
   out_8696878634488970934[1] = state[1];
   out_8696878634488970934[2] = state[2];
}
void H_12(double *state, double *unused, double *out_736972635917771064) {
   out_736972635917771064[0] = 1;
   out_736972635917771064[1] = 0;
   out_736972635917771064[2] = 0;
   out_736972635917771064[3] = 0;
   out_736972635917771064[4] = 0;
   out_736972635917771064[5] = 0;
   out_736972635917771064[6] = 0;
   out_736972635917771064[7] = 0;
   out_736972635917771064[8] = 0;
   out_736972635917771064[9] = 0;
   out_736972635917771064[10] = 0;
   out_736972635917771064[11] = 0;
   out_736972635917771064[12] = 0;
   out_736972635917771064[13] = 0;
   out_736972635917771064[14] = 0;
   out_736972635917771064[15] = 0;
   out_736972635917771064[16] = 0;
   out_736972635917771064[17] = 0;
   out_736972635917771064[18] = 0;
   out_736972635917771064[19] = 0;
   out_736972635917771064[20] = 0;
   out_736972635917771064[21] = 0;
   out_736972635917771064[22] = 0;
   out_736972635917771064[23] = 1;
   out_736972635917771064[24] = 0;
   out_736972635917771064[25] = 0;
   out_736972635917771064[26] = 0;
   out_736972635917771064[27] = 0;
   out_736972635917771064[28] = 0;
   out_736972635917771064[29] = 0;
   out_736972635917771064[30] = 0;
   out_736972635917771064[31] = 0;
   out_736972635917771064[32] = 0;
   out_736972635917771064[33] = 0;
   out_736972635917771064[34] = 0;
   out_736972635917771064[35] = 0;
   out_736972635917771064[36] = 0;
   out_736972635917771064[37] = 0;
   out_736972635917771064[38] = 0;
   out_736972635917771064[39] = 0;
   out_736972635917771064[40] = 0;
   out_736972635917771064[41] = 0;
   out_736972635917771064[42] = 0;
   out_736972635917771064[43] = 0;
   out_736972635917771064[44] = 0;
   out_736972635917771064[45] = 0;
   out_736972635917771064[46] = 1;
   out_736972635917771064[47] = 0;
   out_736972635917771064[48] = 0;
   out_736972635917771064[49] = 0;
   out_736972635917771064[50] = 0;
   out_736972635917771064[51] = 0;
   out_736972635917771064[52] = 0;
   out_736972635917771064[53] = 0;
   out_736972635917771064[54] = 0;
   out_736972635917771064[55] = 0;
   out_736972635917771064[56] = 0;
   out_736972635917771064[57] = 0;
   out_736972635917771064[58] = 0;
   out_736972635917771064[59] = 0;
   out_736972635917771064[60] = 0;
   out_736972635917771064[61] = 0;
   out_736972635917771064[62] = 0;
   out_736972635917771064[63] = 0;
   out_736972635917771064[64] = 0;
   out_736972635917771064[65] = 0;
}
void h_35(double *state, double *unused, double *out_2497407888429305875) {
   out_2497407888429305875[0] = state[7];
   out_2497407888429305875[1] = state[8];
   out_2497407888429305875[2] = state[9];
}
void H_35(double *state, double *unused, double *out_915821714741583355) {
   out_915821714741583355[0] = 0;
   out_915821714741583355[1] = 0;
   out_915821714741583355[2] = 0;
   out_915821714741583355[3] = 0;
   out_915821714741583355[4] = 0;
   out_915821714741583355[5] = 0;
   out_915821714741583355[6] = 0;
   out_915821714741583355[7] = 1;
   out_915821714741583355[8] = 0;
   out_915821714741583355[9] = 0;
   out_915821714741583355[10] = 0;
   out_915821714741583355[11] = 0;
   out_915821714741583355[12] = 0;
   out_915821714741583355[13] = 0;
   out_915821714741583355[14] = 0;
   out_915821714741583355[15] = 0;
   out_915821714741583355[16] = 0;
   out_915821714741583355[17] = 0;
   out_915821714741583355[18] = 0;
   out_915821714741583355[19] = 0;
   out_915821714741583355[20] = 0;
   out_915821714741583355[21] = 0;
   out_915821714741583355[22] = 0;
   out_915821714741583355[23] = 0;
   out_915821714741583355[24] = 0;
   out_915821714741583355[25] = 0;
   out_915821714741583355[26] = 0;
   out_915821714741583355[27] = 0;
   out_915821714741583355[28] = 0;
   out_915821714741583355[29] = 0;
   out_915821714741583355[30] = 1;
   out_915821714741583355[31] = 0;
   out_915821714741583355[32] = 0;
   out_915821714741583355[33] = 0;
   out_915821714741583355[34] = 0;
   out_915821714741583355[35] = 0;
   out_915821714741583355[36] = 0;
   out_915821714741583355[37] = 0;
   out_915821714741583355[38] = 0;
   out_915821714741583355[39] = 0;
   out_915821714741583355[40] = 0;
   out_915821714741583355[41] = 0;
   out_915821714741583355[42] = 0;
   out_915821714741583355[43] = 0;
   out_915821714741583355[44] = 0;
   out_915821714741583355[45] = 0;
   out_915821714741583355[46] = 0;
   out_915821714741583355[47] = 0;
   out_915821714741583355[48] = 0;
   out_915821714741583355[49] = 0;
   out_915821714741583355[50] = 0;
   out_915821714741583355[51] = 0;
   out_915821714741583355[52] = 0;
   out_915821714741583355[53] = 1;
   out_915821714741583355[54] = 0;
   out_915821714741583355[55] = 0;
   out_915821714741583355[56] = 0;
   out_915821714741583355[57] = 0;
   out_915821714741583355[58] = 0;
   out_915821714741583355[59] = 0;
   out_915821714741583355[60] = 0;
   out_915821714741583355[61] = 0;
   out_915821714741583355[62] = 0;
   out_915821714741583355[63] = 0;
   out_915821714741583355[64] = 0;
   out_915821714741583355[65] = 0;
}
void h_32(double *state, double *unused, double *out_890866110580672803) {
   out_890866110580672803[0] = state[3];
   out_890866110580672803[1] = state[4];
   out_890866110580672803[2] = state[5];
   out_890866110580672803[3] = state[6];
}
void H_32(double *state, double *unused, double *out_5134520952413492425) {
   out_5134520952413492425[0] = 0;
   out_5134520952413492425[1] = 0;
   out_5134520952413492425[2] = 0;
   out_5134520952413492425[3] = 1;
   out_5134520952413492425[4] = 0;
   out_5134520952413492425[5] = 0;
   out_5134520952413492425[6] = 0;
   out_5134520952413492425[7] = 0;
   out_5134520952413492425[8] = 0;
   out_5134520952413492425[9] = 0;
   out_5134520952413492425[10] = 0;
   out_5134520952413492425[11] = 0;
   out_5134520952413492425[12] = 0;
   out_5134520952413492425[13] = 0;
   out_5134520952413492425[14] = 0;
   out_5134520952413492425[15] = 0;
   out_5134520952413492425[16] = 0;
   out_5134520952413492425[17] = 0;
   out_5134520952413492425[18] = 0;
   out_5134520952413492425[19] = 0;
   out_5134520952413492425[20] = 0;
   out_5134520952413492425[21] = 0;
   out_5134520952413492425[22] = 0;
   out_5134520952413492425[23] = 0;
   out_5134520952413492425[24] = 0;
   out_5134520952413492425[25] = 0;
   out_5134520952413492425[26] = 1;
   out_5134520952413492425[27] = 0;
   out_5134520952413492425[28] = 0;
   out_5134520952413492425[29] = 0;
   out_5134520952413492425[30] = 0;
   out_5134520952413492425[31] = 0;
   out_5134520952413492425[32] = 0;
   out_5134520952413492425[33] = 0;
   out_5134520952413492425[34] = 0;
   out_5134520952413492425[35] = 0;
   out_5134520952413492425[36] = 0;
   out_5134520952413492425[37] = 0;
   out_5134520952413492425[38] = 0;
   out_5134520952413492425[39] = 0;
   out_5134520952413492425[40] = 0;
   out_5134520952413492425[41] = 0;
   out_5134520952413492425[42] = 0;
   out_5134520952413492425[43] = 0;
   out_5134520952413492425[44] = 0;
   out_5134520952413492425[45] = 0;
   out_5134520952413492425[46] = 0;
   out_5134520952413492425[47] = 0;
   out_5134520952413492425[48] = 0;
   out_5134520952413492425[49] = 1;
   out_5134520952413492425[50] = 0;
   out_5134520952413492425[51] = 0;
   out_5134520952413492425[52] = 0;
   out_5134520952413492425[53] = 0;
   out_5134520952413492425[54] = 0;
   out_5134520952413492425[55] = 0;
   out_5134520952413492425[56] = 0;
   out_5134520952413492425[57] = 0;
   out_5134520952413492425[58] = 0;
   out_5134520952413492425[59] = 0;
   out_5134520952413492425[60] = 0;
   out_5134520952413492425[61] = 0;
   out_5134520952413492425[62] = 0;
   out_5134520952413492425[63] = 0;
   out_5134520952413492425[64] = 0;
   out_5134520952413492425[65] = 0;
   out_5134520952413492425[66] = 0;
   out_5134520952413492425[67] = 0;
   out_5134520952413492425[68] = 0;
   out_5134520952413492425[69] = 0;
   out_5134520952413492425[70] = 0;
   out_5134520952413492425[71] = 0;
   out_5134520952413492425[72] = 1;
   out_5134520952413492425[73] = 0;
   out_5134520952413492425[74] = 0;
   out_5134520952413492425[75] = 0;
   out_5134520952413492425[76] = 0;
   out_5134520952413492425[77] = 0;
   out_5134520952413492425[78] = 0;
   out_5134520952413492425[79] = 0;
   out_5134520952413492425[80] = 0;
   out_5134520952413492425[81] = 0;
   out_5134520952413492425[82] = 0;
   out_5134520952413492425[83] = 0;
   out_5134520952413492425[84] = 0;
   out_5134520952413492425[85] = 0;
   out_5134520952413492425[86] = 0;
   out_5134520952413492425[87] = 0;
}
void h_13(double *state, double *unused, double *out_1077136634687505963) {
   out_1077136634687505963[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1077136634687505963[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1077136634687505963[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_5216531610611499065) {
   out_5216531610611499065[0] = 0;
   out_5216531610611499065[1] = 0;
   out_5216531610611499065[2] = 0;
   out_5216531610611499065[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5216531610611499065[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5216531610611499065[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_5216531610611499065[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5216531610611499065[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_5216531610611499065[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_5216531610611499065[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_5216531610611499065[10] = 0;
   out_5216531610611499065[11] = 0;
   out_5216531610611499065[12] = 0;
   out_5216531610611499065[13] = 0;
   out_5216531610611499065[14] = 0;
   out_5216531610611499065[15] = 0;
   out_5216531610611499065[16] = 0;
   out_5216531610611499065[17] = 0;
   out_5216531610611499065[18] = 0;
   out_5216531610611499065[19] = 0;
   out_5216531610611499065[20] = 0;
   out_5216531610611499065[21] = 0;
   out_5216531610611499065[22] = 0;
   out_5216531610611499065[23] = 0;
   out_5216531610611499065[24] = 0;
   out_5216531610611499065[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5216531610611499065[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5216531610611499065[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5216531610611499065[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_5216531610611499065[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_5216531610611499065[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_5216531610611499065[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_5216531610611499065[32] = 0;
   out_5216531610611499065[33] = 0;
   out_5216531610611499065[34] = 0;
   out_5216531610611499065[35] = 0;
   out_5216531610611499065[36] = 0;
   out_5216531610611499065[37] = 0;
   out_5216531610611499065[38] = 0;
   out_5216531610611499065[39] = 0;
   out_5216531610611499065[40] = 0;
   out_5216531610611499065[41] = 0;
   out_5216531610611499065[42] = 0;
   out_5216531610611499065[43] = 0;
   out_5216531610611499065[44] = 0;
   out_5216531610611499065[45] = 0;
   out_5216531610611499065[46] = 0;
   out_5216531610611499065[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5216531610611499065[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_5216531610611499065[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5216531610611499065[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5216531610611499065[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_5216531610611499065[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_5216531610611499065[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_5216531610611499065[54] = 0;
   out_5216531610611499065[55] = 0;
   out_5216531610611499065[56] = 0;
   out_5216531610611499065[57] = 0;
   out_5216531610611499065[58] = 0;
   out_5216531610611499065[59] = 0;
   out_5216531610611499065[60] = 0;
   out_5216531610611499065[61] = 0;
   out_5216531610611499065[62] = 0;
   out_5216531610611499065[63] = 0;
   out_5216531610611499065[64] = 0;
   out_5216531610611499065[65] = 0;
}
void h_14(double *state, double *unused, double *out_9114658190125024279) {
   out_9114658190125024279[0] = state[10];
   out_9114658190125024279[1] = state[11];
   out_9114658190125024279[2] = state[12];
}
void H_14(double *state, double *unused, double *out_3004735163150256739) {
   out_3004735163150256739[0] = 0;
   out_3004735163150256739[1] = 0;
   out_3004735163150256739[2] = 0;
   out_3004735163150256739[3] = 0;
   out_3004735163150256739[4] = 0;
   out_3004735163150256739[5] = 0;
   out_3004735163150256739[6] = 0;
   out_3004735163150256739[7] = 0;
   out_3004735163150256739[8] = 0;
   out_3004735163150256739[9] = 0;
   out_3004735163150256739[10] = 1;
   out_3004735163150256739[11] = 0;
   out_3004735163150256739[12] = 0;
   out_3004735163150256739[13] = 0;
   out_3004735163150256739[14] = 0;
   out_3004735163150256739[15] = 0;
   out_3004735163150256739[16] = 0;
   out_3004735163150256739[17] = 0;
   out_3004735163150256739[18] = 0;
   out_3004735163150256739[19] = 0;
   out_3004735163150256739[20] = 0;
   out_3004735163150256739[21] = 0;
   out_3004735163150256739[22] = 0;
   out_3004735163150256739[23] = 0;
   out_3004735163150256739[24] = 0;
   out_3004735163150256739[25] = 0;
   out_3004735163150256739[26] = 0;
   out_3004735163150256739[27] = 0;
   out_3004735163150256739[28] = 0;
   out_3004735163150256739[29] = 0;
   out_3004735163150256739[30] = 0;
   out_3004735163150256739[31] = 0;
   out_3004735163150256739[32] = 0;
   out_3004735163150256739[33] = 1;
   out_3004735163150256739[34] = 0;
   out_3004735163150256739[35] = 0;
   out_3004735163150256739[36] = 0;
   out_3004735163150256739[37] = 0;
   out_3004735163150256739[38] = 0;
   out_3004735163150256739[39] = 0;
   out_3004735163150256739[40] = 0;
   out_3004735163150256739[41] = 0;
   out_3004735163150256739[42] = 0;
   out_3004735163150256739[43] = 0;
   out_3004735163150256739[44] = 0;
   out_3004735163150256739[45] = 0;
   out_3004735163150256739[46] = 0;
   out_3004735163150256739[47] = 0;
   out_3004735163150256739[48] = 0;
   out_3004735163150256739[49] = 0;
   out_3004735163150256739[50] = 0;
   out_3004735163150256739[51] = 0;
   out_3004735163150256739[52] = 0;
   out_3004735163150256739[53] = 0;
   out_3004735163150256739[54] = 0;
   out_3004735163150256739[55] = 0;
   out_3004735163150256739[56] = 1;
   out_3004735163150256739[57] = 0;
   out_3004735163150256739[58] = 0;
   out_3004735163150256739[59] = 0;
   out_3004735163150256739[60] = 0;
   out_3004735163150256739[61] = 0;
   out_3004735163150256739[62] = 0;
   out_3004735163150256739[63] = 0;
   out_3004735163150256739[64] = 0;
   out_3004735163150256739[65] = 0;
}
void h_33(double *state, double *unused, double *out_9074733186662258341) {
   out_9074733186662258341[0] = state[16];
   out_9074733186662258341[1] = state[17];
   out_9074733186662258341[2] = state[18];
}
void H_33(double *state, double *unused, double *out_2234735289897274249) {
   out_2234735289897274249[0] = 0;
   out_2234735289897274249[1] = 0;
   out_2234735289897274249[2] = 0;
   out_2234735289897274249[3] = 0;
   out_2234735289897274249[4] = 0;
   out_2234735289897274249[5] = 0;
   out_2234735289897274249[6] = 0;
   out_2234735289897274249[7] = 0;
   out_2234735289897274249[8] = 0;
   out_2234735289897274249[9] = 0;
   out_2234735289897274249[10] = 0;
   out_2234735289897274249[11] = 0;
   out_2234735289897274249[12] = 0;
   out_2234735289897274249[13] = 0;
   out_2234735289897274249[14] = 0;
   out_2234735289897274249[15] = 0;
   out_2234735289897274249[16] = 1;
   out_2234735289897274249[17] = 0;
   out_2234735289897274249[18] = 0;
   out_2234735289897274249[19] = 0;
   out_2234735289897274249[20] = 0;
   out_2234735289897274249[21] = 0;
   out_2234735289897274249[22] = 0;
   out_2234735289897274249[23] = 0;
   out_2234735289897274249[24] = 0;
   out_2234735289897274249[25] = 0;
   out_2234735289897274249[26] = 0;
   out_2234735289897274249[27] = 0;
   out_2234735289897274249[28] = 0;
   out_2234735289897274249[29] = 0;
   out_2234735289897274249[30] = 0;
   out_2234735289897274249[31] = 0;
   out_2234735289897274249[32] = 0;
   out_2234735289897274249[33] = 0;
   out_2234735289897274249[34] = 0;
   out_2234735289897274249[35] = 0;
   out_2234735289897274249[36] = 0;
   out_2234735289897274249[37] = 0;
   out_2234735289897274249[38] = 0;
   out_2234735289897274249[39] = 1;
   out_2234735289897274249[40] = 0;
   out_2234735289897274249[41] = 0;
   out_2234735289897274249[42] = 0;
   out_2234735289897274249[43] = 0;
   out_2234735289897274249[44] = 0;
   out_2234735289897274249[45] = 0;
   out_2234735289897274249[46] = 0;
   out_2234735289897274249[47] = 0;
   out_2234735289897274249[48] = 0;
   out_2234735289897274249[49] = 0;
   out_2234735289897274249[50] = 0;
   out_2234735289897274249[51] = 0;
   out_2234735289897274249[52] = 0;
   out_2234735289897274249[53] = 0;
   out_2234735289897274249[54] = 0;
   out_2234735289897274249[55] = 0;
   out_2234735289897274249[56] = 0;
   out_2234735289897274249[57] = 0;
   out_2234735289897274249[58] = 0;
   out_2234735289897274249[59] = 0;
   out_2234735289897274249[60] = 0;
   out_2234735289897274249[61] = 0;
   out_2234735289897274249[62] = 1;
   out_2234735289897274249[63] = 0;
   out_2234735289897274249[64] = 0;
   out_2234735289897274249[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_67663736958012525) {
  H(in_vec, out_67663736958012525);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_6833709615789680185) {
  err_fun(nom_x, delta_x, out_6833709615789680185);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_3941682818716822640) {
  inv_err_fun(nom_x, true_x, out_3941682818716822640);
}
void live_H_mod_fun(double *state, double *out_6899387553266169298) {
  H_mod_fun(state, out_6899387553266169298);
}
void live_f_fun(double *state, double dt, double *out_4238634013988088602) {
  f_fun(state,  dt, out_4238634013988088602);
}
void live_F_fun(double *state, double dt, double *out_5205530917026691074) {
  F_fun(state,  dt, out_5205530917026691074);
}
void live_h_4(double *state, double *unused, double *out_5549312776198825725) {
  h_4(state, unused, out_5549312776198825725);
}
void live_H_4(double *state, double *unused, double *out_4282483772114190731) {
  H_4(state, unused, out_4282483772114190731);
}
void live_h_9(double *state, double *unused, double *out_9114658190125024279) {
  h_9(state, unused, out_9114658190125024279);
}
void live_H_9(double *state, double *unused, double *out_3004735163150256739) {
  H_9(state, unused, out_3004735163150256739);
}
void live_h_10(double *state, double *unused, double *out_7393512525595384262) {
  h_10(state, unused, out_7393512525595384262);
}
void live_H_10(double *state, double *unused, double *out_3097326390654242864) {
  H_10(state, unused, out_3097326390654242864);
}
void live_h_12(double *state, double *unused, double *out_8696878634488970934) {
  h_12(state, unused, out_8696878634488970934);
}
void live_H_12(double *state, double *unused, double *out_736972635917771064) {
  H_12(state, unused, out_736972635917771064);
}
void live_h_35(double *state, double *unused, double *out_2497407888429305875) {
  h_35(state, unused, out_2497407888429305875);
}
void live_H_35(double *state, double *unused, double *out_915821714741583355) {
  H_35(state, unused, out_915821714741583355);
}
void live_h_32(double *state, double *unused, double *out_890866110580672803) {
  h_32(state, unused, out_890866110580672803);
}
void live_H_32(double *state, double *unused, double *out_5134520952413492425) {
  H_32(state, unused, out_5134520952413492425);
}
void live_h_13(double *state, double *unused, double *out_1077136634687505963) {
  h_13(state, unused, out_1077136634687505963);
}
void live_H_13(double *state, double *unused, double *out_5216531610611499065) {
  H_13(state, unused, out_5216531610611499065);
}
void live_h_14(double *state, double *unused, double *out_9114658190125024279) {
  h_14(state, unused, out_9114658190125024279);
}
void live_H_14(double *state, double *unused, double *out_3004735163150256739) {
  H_14(state, unused, out_3004735163150256739);
}
void live_h_33(double *state, double *unused, double *out_9074733186662258341) {
  h_33(state, unused, out_9074733186662258341);
}
void live_H_33(double *state, double *unused, double *out_2234735289897274249) {
  H_33(state, unused, out_2234735289897274249);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
